<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Verification</title>
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: { primary: "#FF4141", secondary: "#1A1D1F" },
            borderRadius: {
              none: "0px",
              sm: "4px",
              DEFAULT: "8px",
              md: "12px",
              lg: "16px",
              xl: "20px",
              "2xl": "24px",
              "3xl": "32px",
              full: "9999px",
              button: "8px",
            },
          },
        },
      };
    </script>

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css"
    />
    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      .custom-alert {
        background-color: #1c1c28;
        color: #ffffff;
        border-left: 4px solid #ff3c38;
        padding: 16px 20px;
        margin: 20px 0;
        border-radius: 8px;
        font-family: "Segoe UI", sans-serif;
        display: flex;
        align-items: center;
        gap: 10px;
        opacity: 0;
        transform: translateY(-10px);
        pointer-events: none;
        transition: opacity 0.4s ease, transform 0.4s ease;
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      }
      .custom-alert.show {
        opacity: 1;
        transform: translateY(0);
        pointer-events: auto;
      }
      .custom-alert.success {
        border-left-color: #4caf50;
      }
      .custom-alert.error {
        border-left-color: #ff4141;
      }
      :where([class^="ri-"])::before {
        content: "\f3c2";
      }
      body {
        background-color: #1a1d1f;
        background-image: linear-gradient(
            rgba(44, 47, 53, 0.1) 1px,
            transparent 1px
          ),
          linear-gradient(90deg, rgba(44, 47, 53, 0.1) 1px, transparent 1px);
        background-size: 20px 20px;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .input-icon {
        color: #6b7280;
        pointer-events: none;
      }
      .form-container {
        width: 100%;
        max-width: 450px;
        padding: 2rem;
        animation: fadeIn 0.5s ease-out;
      }
      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
      .input-field {
        background-color: #252a2e;
        border: none;
        color: white;
        padding: 1rem;
        width: 100%;
        border-radius: 8px;
      }
      .input-field::placeholder {
        color: #6b7280;
      }
      .input-field:focus {
        outline: none;
        box-shadow: 0 0 0 2px rgba(255, 65, 65, 0.3);
      }
      .login-btn {
        background-color: #ff4141;
        color: white;
        border: none;
        width: 100%;
        padding: 1rem;
        border-radius: 8px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
      }
      .login-btn:hover {
        background-color: #e63939;
        transform: translateY(-1px);
      }
      .login-btn:active {
        transform: translateY(1px);
      }
      .login-btn.loading {
        pointer-events: none;
        opacity: 0.8;
      }
      .login-btn.loading::after {
        content: "";
        position: absolute;
        width: 20px;
        height: 20px;
        top: 50%;
        left: 50%;
        margin: -10px 0 0 -10px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-top-color: white;
        border-radius: 50%;
        animation: spin 0.8s linear infinite;
      }
      @keyframes spin {
        to {
          transform: rotate(360deg);
        }
      }
      .countdown {
        font-size: 0.9rem;
        color: #6b7280;
        transition: color 0.3s ease;
      }
      .countdown.warning {
        color: #ff4141;
      }
      .resend-btn {
        color: #ff4141;
        text-decoration: none;
        transition: all 0.3s ease;
        cursor: pointer;
      }
      .resend-btn:hover {
        color: #e63939;
        text-decoration: underline;
      }
      .resend-btn:disabled {
        color: #6b7280;
        cursor: not-allowed;
        text-decoration: none;
      }
      .tab-indicator {
        height: 2px;
        background-color: #ff4141;
        position: absolute;
        bottom: 0;
        transition: all 0.3s;
      }
    </style>
  </head>
  <body>
    <div class="form-container shadow-2xl">
      <div class="flex justify-center mb-10">
        <div class="flex items-center">
          <div
            class="w-10 h-10 flex items-center justify-center text-primary text-3xl"
          >
            <i class="ri-camera-line" style="color: #ff4141"></i>
          </div>
          <span class="text-[#FF4141] text-3xl font-['Pacifico']">logo</span>
        </div>
      </div>

      <form method="post" id="otpForm">
        <div class="space-y-5">
          <% if (messeage && messeage.type == "danger") { %>
          <div
            class="alert alert-danger alert-dismissible fade show"
            role="alert"
            style="
              color: #ff4d4f;
              font-weight: bold;
              margin-bottom: 10px;
              font-size: 20px;
            "
          >
            <%= messeage.notify %>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="alert"
              aria-label="Close"
              style="filter: invert(1) brightness(2)"
            ></button>
          </div>
          <% } %>
        </div>

        <div class="mb-6">
          <h1
            class="text-white text-2xl font-semibold mb-2"
            style="text-align: center"
          >
            Verification
          </h1>
          <br />
          <h2 class="text-white text-xl font-medium mb-2">Enter OTP</h2>
          <p class="text-gray-400 text-sm mb-4">
            Please enter the verification code sent to your email
          </p>

          <div class="relative mb-6">
            <div
              class="absolute inset-y-0 left-0 pl-3 flex items-center input-icon"
            >
              <i class="ri-lock-line"></i>
            </div>
            <input
              type="text"
              id="otp"
              class="input-field pl-10"
              placeholder="Enter verification code"
              required
              name="otp"
              maxlength="4"
            />
          </div>

          <div class="flex justify-between items-center mb-6">
            <button type="button" id="resendBtn" class="resend-btn text-sm">
              Resend Code
            </button>
            <span id="countdown" class="countdown"
              >Code expires in: <span id="timer">05:00</span></span
            >
          </div>
        </div>

        <button type="submit" class="login-btn" id="verifyBtn">
          Verify Account
        </button>
      </form>
    </div>

    <div id="custom-alert" class="custom-alert">
      <span class="alert-icon">!</span>
      <span class="alert-message" id="alert-message">This is an alert</span>
      <button class="close-alert" onclick="hideAlert()">&times;</button>
    </div>

    <!-- Bootstrap JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      // OTP Input handling
      const otpInput = document.getElementById("otp");
      otpInput.addEventListener("input", function (e) {
        this.value = this.value.replace(/[^0-9a-zA-Z]/g, "");
      });

      // Countdown Timer
      let timeLeft = 60; // 5 minutes in seconds
      const timerDisplay = document.getElementById("timer");
      const countdownElement = document.getElementById("countdown");
      const resendBtn = document.getElementById("resendBtn");

      function updateTimer() {
        const minutes = Math.floor(timeLeft / 60);
        const seconds = timeLeft % 60;
        timerDisplay.textContent = `${minutes
          .toString()
          .padStart(2, "0")}:${seconds.toString().padStart(2, "0")}`;

        if (timeLeft <= 60) {
          countdownElement.classList.add("warning");
        }

        if (timeLeft <= 0) {
          clearInterval(timerInterval);
          resendBtn.disabled = false;
          countdownElement.style.display = "none";
        } else {
          timeLeft--;
        }
      }

      const timerInterval = setInterval(updateTimer, 1000);
      resendBtn.disabled = true;

      // Form submission handling
      const form = document.getElementById("otpForm");
      const verifyBtn = document.getElementById("verifyBtn");

      form.addEventListener("submit", function (e) {
        e.preventDefault();
        verifyBtn.classList.add("loading");
        verifyBtn.textContent = "Verifying...";

        // Simulate form submission (replace with actual form submission)
        setTimeout(() => {
          this.submit();
        }, 1000);
      });

      // Alert system
      function showAlert(message, type = "error") {
        const alertBox = document.getElementById("custom-alert");
        const alertMessage = document.getElementById("alert-message");
        alertMessage.textContent = message;
        alertBox.className = `custom-alert ${type}`;
        alertBox.classList.add("show");

        setTimeout(() => {
          hideAlert();
        }, 5000);
      }

      function hideAlert() {
        const alertBox = document.getElementById("custom-alert");
        alertBox.classList.remove("show");
      }

      // Resend OTP handling
      resendBtn.addEventListener("click", function () {
        if (!this.disabled) {
          window.location.href = "/resendotp";
        }
      });
    </script>
  </body>
</html>
