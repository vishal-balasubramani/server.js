<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Account - Sign Up or Login</title>
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
  <!--   <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> -->
<!--  this is for font  -->   <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
   <!--  this is image folder link --><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css">
    <script>
        tailwind.config={
            theme:{
                extend:{
                    colors:{
                        primary:'#ff3b30',
                        secondary:'#0a0e17'
                    },
                    borderRadius:{
                        'none':'0px',
                        'sm':'4px',
                        DEFAULT:'8px',
                        'md':'12px',
                        'lg':'16px',
                        'xl':'20px',
                        '2xl':'24px',
                        '3xl':'32px',
                        'full':'9999px',
                        'button':'8px'
                    }
                }
            }
        }
    </script>
    <style>
  .custom-alert {
  background-color: #1c1c28;
  color: #ffffff;
  border-left: 4px solid #ff3c38;
  padding: 16px 20px;
  margin: 20px 0;
  border-radius: 8px;
  font-family: 'Segoe UI', sans-serif;
  display: flex;
  align-items: center;
  gap: 10px;

  opacity: 0;
  transform: translateY(-10px);
  pointer-events: none;
  transition: opacity 0.4s ease, transform 0.4s ease;

  position: fixed; /* Fix position to the bottom of the screen */
  left: 50%; /* Center horizontally */
  bottom: 20px; /* 20px from the bottom */
  transform: translateX(-50%) translateY(0); /* Adjust to center correctly */
}

.custom-alert.show {
  opacity: 1;
  transform: translateX(-50%) translateY(0);
  pointer-events: auto;
}


        :where([class^="ri-"])::before { content: "\f3c2"; }
        body {
            background-color: #0a0e17;
            background-image: 
                linear-gradient(rgba(255, 59, 48, 0.05) 1px, transparent 1px),
                linear-gradient(90deg, rgba(255, 59, 48, 0.05) 1px, transparent 1px);
            background-size: 20px 20px;
        }
        .auth-card {
            background-color: rgba(16, 20, 30, 0.8);
            backdrop-filter: blur(10px);
        }
        .tab-indicator {
            transition: transform 0.3s ease;
        }
        .input-field {
            background-color: rgba(30, 34, 45, 0.8);
        }
        .input-field:focus {
            border-color: rgba(255, 59, 48, 0.5);
            box-shadow: 0 0 0 2px rgba(255, 59, 48, 0.2);
        }
        .social-btn {
            background-color: rgba(30, 34, 45, 0.8);
            transition: all 0.2s ease;
        }
        .social-btn:hover {
            background-color: rgba(40, 44, 55, 0.9);
        }
        .divider::before, .divider::after {
            content: "";
            flex: 1;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
    </style>
</head>
<body class="min-h-screen flex items-center justify-center p-4">
    
    <div class="auth-card w-full max-w-md rounded-lg shadow-2xl p-8">
        <!-- Logo -->


        <div class="flex justify-center mb-8">
            <div class="text-primary font-['Pacifico'] text-3xl flex items-center">
                <div class="w-10 h-10 flex items-center justify-center mr-2 bg-primary rounded-full">
                    <i class="ri-camera-line text-white ri-lg"></i>
                </div>
                <span>Ucam</span>
            </div>
        </div>
        

        <!-- Tabs -->
        <div class="relative mb-8">
            <div class="flex text-gray-400">
                <button id="login-tab" 
                    class="flex-1 py-3 text-center <%= activeTab === 'login' ? 'text-primary border-b-2 border-primary' : 'text-gray-400' %>"
                    onclick="window.location.href='/login'">
                        Login
                </button>
                <button id="signup-tab" 
                    class="flex-1 py-3 text-center <%= activeTab === 'signup' ? 'text-primary border-b-2 border-primary' : 'text-gray-400' %>"
                    onclick="window.location.href='/signup'">
                        Sign Up
                </button>
            </div>
            <div id="tab-indicator" class="tab-indicator absolute bottom-0 left-1/2 w-1/2 h-0.5 bg-primary" style="transform: translateX(0%)"></div>
        </div>
        
        
        
        <% if(formType == 'signup') { %>
        <!-- Signup Form -->
        <form id="signup-form" class="block" method="post">
            <div class="space-y-5">
            <% if (messeage && messeage.type == "danger") { %>
                <div class="alert alert-danger alert-dismissible fade show" role="alert" 
                    style="color: #ff4d4f;  font-weight: bold; margin-bottom: 10px; font-size: 20px; ">
                        <%= messeage.notify %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"
                    style="filter: invert(1) brightness(2);"></button>
                </div>
            <% } %>
            </div>
            <div class="space-y-5">
                
                <div >
                    <label class="block text-gray-300 mb-2" >Full Name</label>
                    <div class="input-field rounded flex items-center border border-transparent focus-within:border-primary">
                        <div class="w-10 h-10 flex items-center justify-center text-gray-400">
                            <i class="ri-user-line"></i>
                        </div>
                        <input type="text" placeholder="Enter your full name" class="w-full h-12 bg-transparent text-white border-none focus:outline-none" id="regname" required name="name">
                    </div>
                </div>
                
                <div>
                    <label class="block text-gray-300 mb-2">Email</label>
                    <div class="input-field rounded flex items-center border border-transparent focus-within:border-primary">
                        <div class="w-10 h-10 flex items-center justify-center text-gray-400">
                            <i class="ri-mail-line"></i>
                        </div>
                        <input required type="email" placeholder="Enter your email" class="w-full h-12 bg-transparent text-white border-none focus:outline-none" id="regemail" name="email">
                    </div>
                </div>
                
                <div>
                    <label class="block text-gray-300 mb-2">Phone Number</label>
                    <div class="input-field rounded flex items-center border border-transparent focus-within:border-primary">
                        <div class="w-10 h-10 flex items-center justify-center text-gray-400">
                            <i class="ri-phone-line"></i>
                        </div>
                        <input required type="tel" placeholder="Enter your phone number" class="w-full h-12 bg-transparent text-white border-none focus:outline-none" id="regphonenumber" name="phonenumber">
                    </div>
                </div>
                
                <div>
                    <label class="block text-gray-300 mb-2">Password</label>
                    <div class="input-field rounded flex items-center border border-transparent focus-within:border-primary">
                        <div class="w-10 h-10 flex items-center justify-center text-gray-400">
                            <i class="ri-lock-line"></i>
                        </div>
                        <input required type="password" placeholder="Create a password" class="w-full h-12 bg-transparent text-white border-none focus:outline-none" id="regpassword" name="password">
                        <button type="button" class="w-10 h-10 flex items-center justify-center text-gray-400 hover:text-white transition-colors" onclick="togglePassword('regpassword', this)">
                            <i class="ri-eye-off-line"></i>
                        </button>
                    </div>
                </div>
                
                <div>
                    <label class="block text-gray-300 mb-2">Confirm Password</label>
                    <div class="input-field rounded flex items-center border border-transparent focus-within:border-primary">
                        <div class="w-10 h-10 flex items-center justify-center text-gray-400">
                            <i class="ri-lock-line"></i>
                        </div>
                        <input required type="password" placeholder="Confirm your password" class="w-full h-12 bg-transparent text-white border-none focus:outline-none" id="regconfirmpassword" name="confirmpassword">
                        <button type="button" class="w-10 h-10 flex items-center justify-center text-gray-400 hover:text-white transition-colors" onclick="togglePassword('regconfirmpassword', this)">
                            <i class="ri-eye-off-line"></i>
                        </button>
                    </div>
                </div>
                
                
                <div class="flex items-start gap-3">
                    <div class="relative flex items-center">
                        <input required type="checkbox" id="terms" class="absolute h-5 w-5">
                        <div class="bg-gray-800  border-gray-600 rounded w-5 h-5 flex flex-shrink-0 justify-center items-center mr-2 focus-within:border-primary">
                            <svg class="fill-current hidden w-3 h-3 text-primary pointer-events-none" viewBox="0 0 20 20">
                                <path d="M0 11l2-2 5 5L18 3l2 2L7 18z"/>
                            </svg>
                        </div>
                        <label for="terms" class="text-sm text-gray-300 select-none">I agree to the <a href="#" class="text-primary hover:underline">Terms of Service</a> and <a href="#" class="text-primary hover:underline">Privacy Policy</a></label>
                    </div>
                </div>
                
                <button  type="submit" class="w-full h-12 bg-primary text-white font-medium rounded-button hover:bg-opacity-90 transition-all whitespace-nowrap !rounded-button" id="regbut">
                Get OTP
                </button>
            </div>
            
        </form>
        <!-- Login Form -->
        <%} else {%>
            
            <form  method="post" action="/login">
            <div class="space-y-5">
            <% if (messeage && messeage.type == "danger") { %>
                <div class="alert alert-danger alert-dismissible fade show" role="alert" 
                    style="color: #ff4d4f;  font-weight: bold; margin-bottom: 10px; font-size: 20px; ">
                        <%= messeage.notify %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"
                    style="filter: invert(1) brightness(2);"></button>
                </div>
            <% } %>
            </div>
            <br>
            <div class="space-y-5">
            
            <div class="space-y-5">
                <div>
                    <label class="block text-gray-300 mb-2">Email</label>
                    <div class="input-field rounded flex items-center border border-transparent focus-within:border-primary">
                        <div class="w-10 h-10 flex items-center justify-center text-gray-400">
                            <i class="ri-mail-line"></i>
                        </div>
                        <input required type="email" placeholder="Enter your email" class="w-full h-12 bg-transparent text-white border-none focus:outline-none" id="logemail" name = "email">
                    </div>
                </div>
                
                <div>
                    <div class="flex justify-between mb-2">
                        <label class="text-gray-300">Password</label>
                        <a href="/forget-password" class="text-primary text-sm hover:underline">Forgot Password?</a>
                    </div>
                    <div class="input-field rounded flex items-center border border-transparent focus-within:border-primary">
                        <div class="w-10 h-10 flex items-center justify-center text-gray-400">
                            <i class="ri-lock-line"></i>
                        </div>
                        <input required type="password" id="logpassword" placeholder="Enter your password" class="w-full h-12 bg-transparent text-white border-none focus:outline-none" name="password">
                        <button type="button" class="w-10 h-10 flex items-center justify-center text-gray-400" onclick="togglePassword('login-password', this)" >
                            <i class="ri-eye-off-line"></i>
                        </button>
                    </div>
                </div>
                
                <button type="submit"  class="w-full h-12 bg-primary text-white font-medium rounded-button hover:bg-opacity-90 transition-all whitespace-nowrap !rounded-button">
                    Login
                </button>
                         
                
            </div>
        </form>
        <%}%>

      
    </div>
                     <div id="custom-alert" class="custom-alert">
  <span class="alert-icon">!</span>
  <span class="alert-message" id="alert-message">This is an alert</span>
  <button class="close-alert" onclick="hideAlert()">&times;</button>
</div>

    <script>
        function showAlert(message) {
  const alertBox = document.getElementById('custom-alert');
  const alertMessage = document.getElementById('alert-message');

  alertMessage.textContent = message;
  alertBox.classList.add('show');


}

function hideAlert() {
  const alertBox = document.getElementById('custom-alert');
  alertBox.classList.remove('show');
}




        // const API='http://localhost:3000';
        // document.getElementById('signup-form').addEventListener('submit',(e)=>{
        //     e.preventDefault();
        //     const name=document.getElementById('regname').value;
        //     const password=document.getElementById('regpassword').value;
        //     const confirmPassword=document.getElementById('regconfirmpassword').value;
        //     const email=document.getElementById('regemail').value;
        //     const phonenumber=document.getElementById('regphonenumber').value;

        //     fetch(`${API}/register`,{
        //         method:'POST',
        //         headers:{
        //             'Content-Type':'application/json'
        //         },
        //         body:JSON.stringify({name,password,confirmPassword,email,phonenumber})
        //     })
        //     .then(res=>res.json())
        //     .then(data=>{
        //         if (data.message === 'Signed up successfully') {
        //             window.location.href = 'http://localhost:3000/OTP.ejs';  // Or wherever your profile page is
        //         }
        //         else{
        //             showAlert(data.message);
        //         }   
        //     })
        //     .catch(err=>{
        //        showAlert('error');
        //     })
        // })

        // document.getElementById('login-form').addEventListener('submit',(e)=>{
        //     e.preventDefault();
        //     const email=document.getElementById('logemail').value;
        //     const password=document.getElementById('logpassword').value;

        //     fetch(`${API}/login`,{
        //         method:'POST',
        //         headers:{
        //             'Content-Type':'application/json'
        //         },
        //         body:JSON.stringify({email,password})

        //     })
        //     .then(res=>res.json())
        //     .then(data=>{
        //         if (data.message === 'successfull' && data.accesstoken) {
        //             localStorage.setItem('accesstoken',data.accesstoken);
        //             window.location.href = 'http://localhost:3000/profile.ejs';  // Or wherever your profile page is
        //         }
        //         else{
        //             showAlert('login failed');
        //         }
        //     })
        //     .catch(err=>{
        //         showAlert('Error');
        //     })
        // })

        // document.addEventListener('DOMContentLoaded', function() {
        //     // Initialize checkbox functionality
        //     document.getElementById('terms').addEventListener('change', function() {
        //         const svg = this.parentNode.querySelector('svg');
        //         if (this.checked) {
        //             svg.classList.remove('hidden');
        //         } else {
        //             svg.classList.add('hidden');
        //         }
        //     });
        // });

        // function switchTab(tab) {
        //     const loginTab = document.getElementById('login-tab');
        //     const signupTab = document.getElementById('signup-tab');
        //     const loginForm = document.getElementById('login-form');
        //     const signupForm = document.getElementById('signup-form');
        //     const tabIndicator = document.getElementById('tab-indicator');
            
        //     if (tab === 'login') {
        //         loginTab.classList.add('text-primary');
        //         signupTab.classList.remove('text-primary');
        //         loginForm.classList.remove('hidden');
        //         signupForm.classList.add('hidden');
        //         tabIndicator.style.transform = 'translateX(-100%)';
        //     } else {
        //         loginTab.classList.remove('text-primary');
        //         signupTab.classList.add('text-primary');
        //         loginForm.classList.add('hidden');
        //         signupForm.classList.remove('hidden');
        //         tabIndicator.style.transform = 'translateX(0%)';
        //     }
        // }

        function togglePassword(inputId, button) {
            const input = document.getElementById(inputId);
            const icon = button.querySelector('i');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('ri-eye-off-line');
                icon.classList.add('ri-eye-line');
            } else {
                input.type = 'password';
                icon.classList.remove('ri-eye-line');
                icon.classList.add('ri-eye-off-line');
            }
        }

        // Form switching logic
        const loginForm = document.getElementById('login-form');
        const signupForm = document.getElementById('signup-form');
        const loginTab = document.getElementById('login-tab');
        const signupTab = document.getElementById('signup-tab');
        const tabIndicator = document.getElementById('tab-indicator');

        function switchToLogin() {
            loginForm.classList.remove('hidden');
            signupForm.classList.add('hidden');
            loginTab.classList.add('text-primary', 'border-b-2', 'border-primary');
            loginTab.classList.remove('text-gray-400');
            signupTab.classList.remove('text-primary', 'border-b-2', 'border-primary');
            signupTab.classList.add('text-gray-400');
            tabIndicator.style.transform = 'translateX(0%)';
        }

        function switchToSignup() {
            signupForm.classList.remove('hidden');
            loginForm.classList.add('hidden');
            signupTab.classList.add('text-primary', 'border-b-2', 'border-primary');
            signupTab.classList.remove('text-gray-400');
            loginTab.classList.remove('text-primary', 'border-b-2', 'border-primary');
            loginTab.classList.add('text-gray-400');
            tabIndicator.style.transform = 'translateX(100%)';
        }

        // Initialize form visibility based on active tab
        if (document.getElementById('login-tab').classList.contains('text-primary')) {
            switchToLogin();
        } else {
            switchToSignup();
        }

        // Add click event listeners
        loginTab.addEventListener('click', (e) => {
            e.preventDefault();
            switchToLogin();
        });

        signupTab.addEventListener('click', (e) => {
            e.preventDefault();
            switchToSignup();
        });
    </script>
</body>
</html>